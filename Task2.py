import random
import math
import matplotlib.pyplot as plt


def gaussian():
    """Generates gaussian random numbers, using a Box-Muller-formula based
    transformation on random point data in a unit circle."""
    r = 0.0
    while(r >= 1.0) or (r < 1e-10):
        x = -1.0 + 2.0 * random.random()
        y = -1.0 + 2.0 * random.random()
        r = x * x + y * y

    return x * math.sqrt(-2.0 * math.log(r) / r)


def nrandoms(n):
    """Return a list of n random numbers generated with the gaussian
    function."""
    return [gaussian() for i in range(n)]


def halfrightopen(xs):
    """Build a list containing each item in the input list multiplied with 0.05 and return a half-right-open list of these numbers.

    Half-right-open is short for: The upper limit is excluded."""
    result = [0.05 * i for i in xs]
    return [i for i in result if min(xs) <= i < max(result)]


def normalize(xs):
    """Return a list where each value is the value of the input list
    divided by the sum of the input list

    """
    return list(map(lambda x: x / sum(xs), xs))


# Test data
x = nrandoms(19)

# a) Count items in half right open random array
print(len(halfrightopen(x)))
plt.hist
# b) Plot an array generated by the function from a). The results may
# differ from one execution of the program to another one.
plt.scatter(range(len(x)), x, marker='*')
plt.title('Raw random numbers')
plt.savefig("plotb.png")
plt.close()
# c) Plot normalized array
plt.scatter(range(len(x)), normalize(x), marker='*')
plt.title('Normalized random numbers')
plt.savefig("plotc.png")
plt.close()
# d) Generate histogram using matplotlib's hist function. Assumption:
# "Random numbers" in the task refers to the list
plt.hist(x)
plt.title("Histogram generated with matplotlib function, data not normalized")
plt.savefig("plotd.png")
plt.close()
plt.hist(x, normed=True)
plt.title("Histogram generated with matplotlib function, data normalized")
plt.savefig("plotdnorm.png")
plt.close()
